# CircleCI Configuration File
---
version: 2.1
jobs:
  unit_test:
    description: Run tests for formatting
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - run:
          name: Run GO FMT on repo
          command: (( $(go fmt ./... | wc -c) == "0" ))
      - run:
          name: Unit tests with Go
          command: make test
  build:
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build container
          command: make container
  push_dev_image:
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build image
          command: make container
      - run:
          name: Login
          command: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run:
          name: Push image
          command: make push
  release:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run:
          name: Login
          command: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: |
          # This is the content of https://git.io/goreleaser on 11/17/2019

          set -e

          TAR_FILE="/tmp/goreleaser.tar.gz"
          RELEASES_URL="https://github.com/goreleaser/goreleaser/releases"
          test -z "$TMPDIR" && TMPDIR="$(mktemp -d)"

          last_version() {
            curl -sL -o /dev/null -w %{url_effective} "$RELEASES_URL/latest" |
              rev |
              cut -f1 -d'/'|
              rev
          }

          download() {
            test -z "$VERSION" && VERSION="$(last_version)"
            test -z "$VERSION" && {
              echo "Unable to get goreleaser version." >&2
              exit 1
            }
            rm -f "$TAR_FILE"
            curl -s -L -o "$TAR_FILE" \
              "$RELEASES_URL/download/$VERSION/goreleaser_$(uname -s)_$(uname -m).tar.gz"
          }

          download
          tar -xf "$TAR_FILE" -C "$TMPDIR"
          "${TMPDIR}/goreleaser" "$@"
      #- run: curl -sL https://git.io/goreleaser | bash

workflows:
  default:
    jobs:
      - unit_test
      - build:
          requires:
            - unit_test
      - push_dev_image:
          context: dockerhub
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - release:
          context: dockerhub
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
